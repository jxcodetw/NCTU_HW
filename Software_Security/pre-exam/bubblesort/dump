
BubbleSort:     file format elf32-i386


Disassembly of section .init:

080483c0 <_init>:
 80483c0:	53                   	push   ebx
 80483c1:	83 ec 08             	sub    esp,0x8
 80483c4:	e8 00 00 00 00       	call   80483c9 <_init+0x9>
 80483c9:	5b                   	pop    ebx
 80483ca:	81 c3 2b 1c 00 00    	add    ebx,0x1c2b
 80483d0:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 80483d6:	85 c0                	test   eax,eax
 80483d8:	74 05                	je     80483df <_init+0x1f>
 80483da:	e8 51 00 00 00       	call   8048430 <__gmon_start__@plt>
 80483df:	83 c4 08             	add    esp,0x8
 80483e2:	5b                   	pop    ebx
 80483e3:	c3                   	ret    

Disassembly of section .plt:

080483f0 <printf@plt-0x10>:
 80483f0:	ff 35 f8 9f 04 08    	push   DWORD PTR ds:0x8049ff8
 80483f6:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 80483fc:	00 00                	add    BYTE PTR [eax],al
	...

08048400 <printf@plt>:
 8048400:	ff 25 00 a0 04 08    	jmp    DWORD PTR ds:0x804a000
 8048406:	68 00 00 00 00       	push   0x0
 804840b:	e9 e0 ff ff ff       	jmp    80483f0 <_init+0x30>

08048410 <puts@plt>:
 8048410:	ff 25 04 a0 04 08    	jmp    DWORD PTR ds:0x804a004
 8048416:	68 08 00 00 00       	push   0x8
 804841b:	e9 d0 ff ff ff       	jmp    80483f0 <_init+0x30>

08048420 <system@plt>:
 8048420:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 8048426:	68 10 00 00 00       	push   0x10
 804842b:	e9 c0 ff ff ff       	jmp    80483f0 <_init+0x30>

08048430 <__gmon_start__@plt>:
 8048430:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 8048436:	68 18 00 00 00       	push   0x18
 804843b:	e9 b0 ff ff ff       	jmp    80483f0 <_init+0x30>

08048440 <exit@plt>:
 8048440:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048446:	68 20 00 00 00       	push   0x20
 804844b:	e9 a0 ff ff ff       	jmp    80483f0 <_init+0x30>

08048450 <__libc_start_main@plt>:
 8048450:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 8048456:	68 28 00 00 00       	push   0x28
 804845b:	e9 90 ff ff ff       	jmp    80483f0 <_init+0x30>

08048460 <setvbuf@plt>:
 8048460:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 8048466:	68 30 00 00 00       	push   0x30
 804846b:	e9 80 ff ff ff       	jmp    80483f0 <_init+0x30>

08048470 <putchar@plt>:
 8048470:	ff 25 1c a0 04 08    	jmp    DWORD PTR ds:0x804a01c
 8048476:	68 38 00 00 00       	push   0x38
 804847b:	e9 70 ff ff ff       	jmp    80483f0 <_init+0x30>

08048480 <__isoc99_scanf@plt>:
 8048480:	ff 25 20 a0 04 08    	jmp    DWORD PTR ds:0x804a020
 8048486:	68 40 00 00 00       	push   0x40
 804848b:	e9 60 ff ff ff       	jmp    80483f0 <_init+0x30>

Disassembly of section .text:

08048490 <_start>:
 8048490:	31 ed                	xor    ebp,ebp
 8048492:	5e                   	pop    esi
 8048493:	89 e1                	mov    ecx,esp
 8048495:	83 e4 f0             	and    esp,0xfffffff0
 8048498:	50                   	push   eax
 8048499:	54                   	push   esp
 804849a:	52                   	push   edx
 804849b:	68 70 88 04 08       	push   0x8048870
 80484a0:	68 00 88 04 08       	push   0x8048800
 80484a5:	51                   	push   ecx
 80484a6:	56                   	push   esi
 80484a7:	68 dc 86 04 08       	push   0x80486dc
 80484ac:	e8 9f ff ff ff       	call   8048450 <__libc_start_main@plt>
 80484b1:	f4                   	hlt    
 80484b2:	90                   	nop
 80484b3:	90                   	nop
 80484b4:	90                   	nop
 80484b5:	90                   	nop
 80484b6:	90                   	nop
 80484b7:	90                   	nop
 80484b8:	90                   	nop
 80484b9:	90                   	nop
 80484ba:	90                   	nop
 80484bb:	90                   	nop
 80484bc:	90                   	nop
 80484bd:	90                   	nop
 80484be:	90                   	nop
 80484bf:	90                   	nop

080484c0 <deregister_tm_clones>:
 80484c0:	b8 2f a0 04 08       	mov    eax,0x804a02f
 80484c5:	2d 2c a0 04 08       	sub    eax,0x804a02c
 80484ca:	83 f8 06             	cmp    eax,0x6
 80484cd:	77 01                	ja     80484d0 <deregister_tm_clones+0x10>
 80484cf:	c3                   	ret    
 80484d0:	b8 00 00 00 00       	mov    eax,0x0
 80484d5:	85 c0                	test   eax,eax
 80484d7:	74 f6                	je     80484cf <deregister_tm_clones+0xf>
 80484d9:	55                   	push   ebp
 80484da:	89 e5                	mov    ebp,esp
 80484dc:	83 ec 18             	sub    esp,0x18
 80484df:	c7 04 24 2c a0 04 08 	mov    DWORD PTR [esp],0x804a02c
 80484e6:	ff d0                	call   eax
 80484e8:	c9                   	leave  
 80484e9:	c3                   	ret    
 80484ea:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

080484f0 <register_tm_clones>:
 80484f0:	b8 2c a0 04 08       	mov    eax,0x804a02c
 80484f5:	2d 2c a0 04 08       	sub    eax,0x804a02c
 80484fa:	c1 f8 02             	sar    eax,0x2
 80484fd:	89 c2                	mov    edx,eax
 80484ff:	c1 ea 1f             	shr    edx,0x1f
 8048502:	01 d0                	add    eax,edx
 8048504:	d1 f8                	sar    eax,1
 8048506:	75 01                	jne    8048509 <register_tm_clones+0x19>
 8048508:	c3                   	ret    
 8048509:	ba 00 00 00 00       	mov    edx,0x0
 804850e:	85 d2                	test   edx,edx
 8048510:	74 f6                	je     8048508 <register_tm_clones+0x18>
 8048512:	55                   	push   ebp
 8048513:	89 e5                	mov    ebp,esp
 8048515:	83 ec 18             	sub    esp,0x18
 8048518:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804851c:	c7 04 24 2c a0 04 08 	mov    DWORD PTR [esp],0x804a02c
 8048523:	ff d2                	call   edx
 8048525:	c9                   	leave  
 8048526:	c3                   	ret    
 8048527:	89 f6                	mov    esi,esi
 8048529:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048530 <__do_global_dtors_aux>:
 8048530:	80 3d 44 a0 04 08 00 	cmp    BYTE PTR ds:0x804a044,0x0
 8048537:	75 13                	jne    804854c <__do_global_dtors_aux+0x1c>
 8048539:	55                   	push   ebp
 804853a:	89 e5                	mov    ebp,esp
 804853c:	83 ec 08             	sub    esp,0x8
 804853f:	e8 7c ff ff ff       	call   80484c0 <deregister_tm_clones>
 8048544:	c6 05 44 a0 04 08 01 	mov    BYTE PTR ds:0x804a044,0x1
 804854b:	c9                   	leave  
 804854c:	f3 c3                	repz ret 
 804854e:	66 90                	xchg   ax,ax

08048550 <frame_dummy>:
 8048550:	a1 04 9f 04 08       	mov    eax,ds:0x8049f04
 8048555:	85 c0                	test   eax,eax
 8048557:	74 1f                	je     8048578 <frame_dummy+0x28>
 8048559:	b8 00 00 00 00       	mov    eax,0x0
 804855e:	85 c0                	test   eax,eax
 8048560:	74 16                	je     8048578 <frame_dummy+0x28>
 8048562:	55                   	push   ebp
 8048563:	89 e5                	mov    ebp,esp
 8048565:	83 ec 18             	sub    esp,0x18
 8048568:	c7 04 24 04 9f 04 08 	mov    DWORD PTR [esp],0x8049f04
 804856f:	ff d0                	call   eax
 8048571:	c9                   	leave  
 8048572:	e9 79 ff ff ff       	jmp    80484f0 <register_tm_clones>
 8048577:	90                   	nop
 8048578:	e9 73 ff ff ff       	jmp    80484f0 <register_tm_clones>
 804857d:	90                   	nop
 804857e:	90                   	nop
 804857f:	90                   	nop

08048580 <DarkSoul>:
 8048580:	55                   	push   ebp
 8048581:	89 e5                	mov    ebp,esp
 8048583:	83 ec 18             	sub    esp,0x18
 8048586:	c7 04 24 98 88 04 08 	mov    DWORD PTR [esp],0x8048898
 804858d:	e8 8e fe ff ff       	call   8048420 <system@plt>
 8048592:	c9                   	leave  
 8048593:	c3                   	ret    

08048594 <InputArray>:
 8048594:	55                   	push   ebp
 8048595:	89 e5                	mov    ebp,esp
 8048597:	83 ec 28             	sub    esp,0x28
 804859a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 804859d:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
 80485a0:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
 80485a7:	eb 23                	jmp    80485cc <InputArray+0x38>
 80485a9:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 80485ac:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
 80485b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 80485b6:	01 d0                	add    eax,edx
 80485b8:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80485bc:	c7 04 24 9b 88 04 08 	mov    DWORD PTR [esp],0x804889b
 80485c3:	e8 b8 fe ff ff       	call   8048480 <__isoc99_scanf@plt>
 80485c8:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
 80485cc:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
 80485d0:	3b 45 f4             	cmp    eax,DWORD PTR [ebp-0xc]
 80485d3:	7f d4                	jg     80485a9 <InputArray+0x15>
 80485d5:	c9                   	leave  
 80485d6:	c3                   	ret    

080485d7 <OutputArray>:
 80485d7:	55                   	push   ebp
 80485d8:	89 e5                	mov    ebp,esp
 80485da:	83 ec 28             	sub    esp,0x28
 80485dd:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 80485e0:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
 80485e3:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
 80485ea:	eb 25                	jmp    8048611 <OutputArray+0x3a>
 80485ec:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 80485ef:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
 80485f6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 80485f9:	01 d0                	add    eax,edx
 80485fb:	8b 00                	mov    eax,DWORD PTR [eax]
 80485fd:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 8048601:	c7 04 24 9e 88 04 08 	mov    DWORD PTR [esp],0x804889e
 8048608:	e8 f3 fd ff ff       	call   8048400 <printf@plt>
 804860d:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
 8048611:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
 8048615:	3b 45 f4             	cmp    eax,DWORD PTR [ebp-0xc]
 8048618:	7f d2                	jg     80485ec <OutputArray+0x15>
 804861a:	c7 04 24 0a 00 00 00 	mov    DWORD PTR [esp],0xa
 8048621:	e8 4a fe ff ff       	call   8048470 <putchar@plt>
 8048626:	c9                   	leave  
 8048627:	c3                   	ret    

08048628 <BubbleSort>:
 8048628:	55                   	push   ebp
 8048629:	89 e5                	mov    ebp,esp
 804862b:	83 ec 14             	sub    esp,0x14
 804862e:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048631:	88 45 ec             	mov    BYTE PTR [ebp-0x14],al
 8048634:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [ebp-0x4],0x0
 804863b:	e9 8c 00 00 00       	jmp    80486cc <BubbleSort+0xa4>
 8048640:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 8048643:	83 c0 01             	add    eax,0x1
 8048646:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
 8048649:	eb 74                	jmp    80486bf <BubbleSort+0x97>
 804864b:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 804864e:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
 8048655:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048658:	01 d0                	add    eax,edx
 804865a:	8b 10                	mov    edx,DWORD PTR [eax]
 804865c:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
 804865f:	8d 0c 85 00 00 00 00 	lea    ecx,[eax*4+0x0]
 8048666:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048669:	01 c8                	add    eax,ecx
 804866b:	8b 00                	mov    eax,DWORD PTR [eax]
 804866d:	39 c2                	cmp    edx,eax
 804866f:	7e 4a                	jle    80486bb <BubbleSort+0x93>
 8048671:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
 8048674:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
 804867b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 804867e:	01 d0                	add    eax,edx
 8048680:	8b 00                	mov    eax,DWORD PTR [eax]
 8048682:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8048685:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
 8048688:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
 804868f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048692:	01 c2                	add    edx,eax
 8048694:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 8048697:	8d 0c 85 00 00 00 00 	lea    ecx,[eax*4+0x0]
 804869e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 80486a1:	01 c8                	add    eax,ecx
 80486a3:	8b 00                	mov    eax,DWORD PTR [eax]
 80486a5:	89 02                	mov    DWORD PTR [edx],eax
 80486a7:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 80486aa:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
 80486b1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 80486b4:	01 c2                	add    edx,eax
 80486b6:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 80486b9:	89 02                	mov    DWORD PTR [edx],eax
 80486bb:	83 45 f8 01          	add    DWORD PTR [ebp-0x8],0x1
 80486bf:	0f b6 45 ec          	movzx  eax,BYTE PTR [ebp-0x14]
 80486c3:	3b 45 f8             	cmp    eax,DWORD PTR [ebp-0x8]
 80486c6:	7f 83                	jg     804864b <BubbleSort+0x23>
 80486c8:	83 45 fc 01          	add    DWORD PTR [ebp-0x4],0x1
 80486cc:	0f b6 45 ec          	movzx  eax,BYTE PTR [ebp-0x14]
 80486d0:	3b 45 fc             	cmp    eax,DWORD PTR [ebp-0x4]
 80486d3:	0f 8f 67 ff ff ff    	jg     8048640 <BubbleSort+0x18>
 80486d9:	90                   	nop
 80486da:	c9                   	leave  
 80486db:	c3                   	ret    

080486dc <main>:
 80486dc:	55                   	push   ebp
 80486dd:	89 e5                	mov    ebp,esp
 80486df:	83 e4 f0             	and    esp,0xfffffff0
 80486e2:	81 ec 20 02 00 00    	sub    esp,0x220
 80486e8:	a1 40 a0 04 08       	mov    eax,ds:0x804a040
 80486ed:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
 80486f4:	00 
 80486f5:	c7 44 24 08 02 00 00 	mov    DWORD PTR [esp+0x8],0x2
 80486fc:	00 
 80486fd:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
 8048704:	00 
 8048705:	89 04 24             	mov    DWORD PTR [esp],eax
 8048708:	e8 53 fd ff ff       	call   8048460 <setvbuf@plt>
 804870d:	c7 04 24 a4 88 04 08 	mov    DWORD PTR [esp],0x80488a4
 8048714:	e8 f7 fc ff ff       	call   8048410 <puts@plt>
 8048719:	c7 04 24 c4 88 04 08 	mov    DWORD PTR [esp],0x80488c4
 8048720:	e8 db fc ff ff       	call   8048400 <printf@plt>
 8048725:	8d 44 24 20          	lea    eax,[esp+0x20]
 8048729:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804872d:	c7 04 24 9b 88 04 08 	mov    DWORD PTR [esp],0x804889b
 8048734:	e8 47 fd ff ff       	call   8048480 <__isoc99_scanf@plt> # scanf("%d", esp+0x20)
 8048739:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
 804873d:	83 f8 7f             	cmp    eax,0x7f <= 127
 8048740:	76 18                	jbe    804875a <main+0x7e> 
 8048742:	c7 04 24 e0 88 04 08 	mov    DWORD PTR [esp],0x80488e0
 8048749:	e8 c2 fc ff ff       	call   8048410 <puts@plt> # puts("Array Length cannot > 127 or < 0")
 804874e:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 8048755:	e8 e6 fc ff ff       	call   8048440 <exit@plt>
 804875a:	c7 04 24 01 89 04 08 	mov    DWORD PTR [esp],0x8048901
 8048761:	e8 9a fc ff ff       	call   8048400 <printf@plt> # printf("Input your Array:")
 8048766:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
 804876a:	0f be c0             	movsx  eax,al
 804876d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 8048771:	8d 44 24 24          	lea    eax,[esp+0x24]
 8048775:	89 04 24             	mov    DWORD PTR [esp],eax
 8048778:	e8 17 fe ff ff       	call   8048594 <InputArray>
 804877d:	c7 04 24 14 89 04 08 	mov    DWORD PTR [esp],0x8048914
 8048784:	e8 77 fc ff ff       	call   8048400 <printf@plt>
 8048789:	8d 44 24 1c          	lea    eax,[esp+0x1c]
 804878d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 8048791:	c7 04 24 9b 88 04 08 	mov    DWORD PTR [esp],0x804889b
 8048798:	e8 e3 fc ff ff       	call   8048480 <__isoc99_scanf@plt>
 804879d:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
 80487a1:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
 80487a5:	39 c2                	cmp    edx,eax
 80487a7:	7e 20                	jle    80487c9 <main+0xed>
 80487a9:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
 80487ad:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80487b1:	c7 04 24 3d 89 04 08 	mov    DWORD PTR [esp],0x804893d
 80487b8:	e8 43 fc ff ff       	call   8048400 <printf@plt>
 80487bd:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 80487c4:	e8 77 fc ff ff       	call   8048440 <exit@plt>
 80487c9:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
 80487cd:	0f b6 c0             	movzx  eax,al
 80487d0:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80487d4:	8d 44 24 24          	lea    eax,[esp+0x24]
 80487d8:	89 04 24             	mov    DWORD PTR [esp],eax
 80487db:	e8 48 fe ff ff       	call   8048628 <BubbleSort>
 80487e0:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
 80487e4:	0f be c0             	movsx  eax,al
 80487e7:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80487eb:	8d 44 24 24          	lea    eax,[esp+0x24]
 80487ef:	89 04 24             	mov    DWORD PTR [esp],eax
 80487f2:	e8 e0 fd ff ff       	call   80485d7 <OutputArray>
 80487f7:	b8 00 00 00 00       	mov    eax,0x0
 80487fc:	c9                   	leave  
 80487fd:	c3                   	ret    
 80487fe:	90                   	nop
 80487ff:	90                   	nop

08048800 <__libc_csu_init>:
 8048800:	55                   	push   ebp
 8048801:	57                   	push   edi
 8048802:	56                   	push   esi
 8048803:	53                   	push   ebx
 8048804:	e8 69 00 00 00       	call   8048872 <__i686.get_pc_thunk.bx>
 8048809:	81 c3 eb 17 00 00    	add    ebx,0x17eb
 804880f:	83 ec 1c             	sub    esp,0x1c
 8048812:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 8048816:	8d bb 0c ff ff ff    	lea    edi,[ebx-0xf4]
 804881c:	e8 9f fb ff ff       	call   80483c0 <_init>
 8048821:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 8048827:	29 c7                	sub    edi,eax
 8048829:	c1 ff 02             	sar    edi,0x2
 804882c:	85 ff                	test   edi,edi
 804882e:	74 29                	je     8048859 <__libc_csu_init+0x59>
 8048830:	31 f6                	xor    esi,esi
 8048832:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048838:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 804883c:	89 2c 24             	mov    DWORD PTR [esp],ebp
 804883f:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048843:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 8048847:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804884b:	ff 94 b3 08 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xf8]
 8048852:	83 c6 01             	add    esi,0x1
 8048855:	39 fe                	cmp    esi,edi
 8048857:	75 df                	jne    8048838 <__libc_csu_init+0x38>
 8048859:	83 c4 1c             	add    esp,0x1c
 804885c:	5b                   	pop    ebx
 804885d:	5e                   	pop    esi
 804885e:	5f                   	pop    edi
 804885f:	5d                   	pop    ebp
 8048860:	c3                   	ret    
 8048861:	eb 0d                	jmp    8048870 <__libc_csu_fini>
 8048863:	90                   	nop
 8048864:	90                   	nop
 8048865:	90                   	nop
 8048866:	90                   	nop
 8048867:	90                   	nop
 8048868:	90                   	nop
 8048869:	90                   	nop
 804886a:	90                   	nop
 804886b:	90                   	nop
 804886c:	90                   	nop
 804886d:	90                   	nop
 804886e:	90                   	nop
 804886f:	90                   	nop

08048870 <__libc_csu_fini>:
 8048870:	f3 c3                	repz ret 

08048872 <__i686.get_pc_thunk.bx>:
 8048872:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048875:	c3                   	ret    
 8048876:	90                   	nop
 8048877:	90                   	nop

Disassembly of section .fini:

08048878 <_fini>:
 8048878:	53                   	push   ebx
 8048879:	83 ec 08             	sub    esp,0x8
 804887c:	e8 00 00 00 00       	call   8048881 <_fini+0x9>
 8048881:	5b                   	pop    ebx
 8048882:	81 c3 73 17 00 00    	add    ebx,0x1773
 8048888:	83 c4 08             	add    esp,0x8
 804888b:	5b                   	pop    ebx
 804888c:	c3                   	ret    
