
rev1:     file format elf32-i386


Disassembly of section .init:

080482b0 <_init>:
 80482b0:	53                   	push   ebx
 80482b1:	83 ec 08             	sub    esp,0x8
 80482b4:	e8 97 00 00 00       	call   8048350 <__x86.get_pc_thunk.bx>
 80482b9:	81 c3 47 1d 00 00    	add    ebx,0x1d47
 80482bf:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 80482c5:	85 c0                	test   eax,eax
 80482c7:	74 05                	je     80482ce <_init+0x1e>
 80482c9:	e8 32 00 00 00       	call   8048300 <__gmon_start__@plt>
 80482ce:	83 c4 08             	add    esp,0x8
 80482d1:	5b                   	pop    ebx
 80482d2:	c3                   	ret    

Disassembly of section .plt:

080482e0 <puts@plt-0x10>:
 80482e0:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 80482e6:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 80482ec:	00 00                	add    BYTE PTR [eax],al
	...

080482f0 <puts@plt>:
 80482f0:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 80482f6:	68 00 00 00 00       	push   0x0
 80482fb:	e9 e0 ff ff ff       	jmp    80482e0 <_init+0x30>

08048300 <__gmon_start__@plt>:
 8048300:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048306:	68 08 00 00 00       	push   0x8
 804830b:	e9 d0 ff ff ff       	jmp    80482e0 <_init+0x30>

08048310 <__libc_start_main@plt>:
 8048310:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 8048316:	68 10 00 00 00       	push   0x10
 804831b:	e9 c0 ff ff ff       	jmp    80482e0 <_init+0x30>

Disassembly of section .text:

08048320 <main>:
 8048320:	31 c0                	xor    eax,eax
 8048322:	c3                   	ret    

08048323 <_start>:
 8048323:	31 ed                	xor    ebp,ebp
 8048325:	5e                   	pop    esi
 8048326:	89 e1                	mov    ecx,esp
 8048328:	83 e4 f0             	and    esp,0xfffffff0
 804832b:	50                   	push   eax
 804832c:	54                   	push   esp
 804832d:	52                   	push   edx
 804832e:	68 40 85 04 08       	push   0x8048540
 8048333:	68 d0 84 04 08       	push   0x80484d0
 8048338:	51                   	push   ecx
 8048339:	56                   	push   esi
 804833a:	68 20 83 04 08       	push   0x8048320
 804833f:	e8 cc ff ff ff       	call   8048310 <__libc_start_main@plt>
 8048344:	f4                   	hlt    
 8048345:	66 90                	xchg   ax,ax
 8048347:	66 90                	xchg   ax,ax
 8048349:	66 90                	xchg   ax,ax
 804834b:	66 90                	xchg   ax,ax
 804834d:	66 90                	xchg   ax,ax
 804834f:	90                   	nop

08048350 <__x86.get_pc_thunk.bx>:
 8048350:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048353:	c3                   	ret    
 8048354:	66 90                	xchg   ax,ax
 8048356:	66 90                	xchg   ax,ax
 8048358:	66 90                	xchg   ax,ax
 804835a:	66 90                	xchg   ax,ax
 804835c:	66 90                	xchg   ax,ax
 804835e:	66 90                	xchg   ax,ax

08048360 <deregister_tm_clones>:
 8048360:	b8 23 a0 04 08       	mov    eax,0x804a023
 8048365:	2d 20 a0 04 08       	sub    eax,0x804a020
 804836a:	83 f8 06             	cmp    eax,0x6
 804836d:	77 01                	ja     8048370 <deregister_tm_clones+0x10>
 804836f:	c3                   	ret    
 8048370:	b8 00 00 00 00       	mov    eax,0x0
 8048375:	85 c0                	test   eax,eax
 8048377:	74 f6                	je     804836f <deregister_tm_clones+0xf>
 8048379:	55                   	push   ebp
 804837a:	89 e5                	mov    ebp,esp
 804837c:	83 ec 18             	sub    esp,0x18
 804837f:	c7 04 24 20 a0 04 08 	mov    DWORD PTR [esp],0x804a020
 8048386:	ff d0                	call   eax
 8048388:	c9                   	leave  
 8048389:	c3                   	ret    
 804838a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

08048390 <register_tm_clones>:
 8048390:	b8 20 a0 04 08       	mov    eax,0x804a020
 8048395:	2d 20 a0 04 08       	sub    eax,0x804a020
 804839a:	c1 f8 02             	sar    eax,0x2
 804839d:	89 c2                	mov    edx,eax
 804839f:	c1 ea 1f             	shr    edx,0x1f
 80483a2:	01 d0                	add    eax,edx
 80483a4:	d1 f8                	sar    eax,1
 80483a6:	75 01                	jne    80483a9 <register_tm_clones+0x19>
 80483a8:	c3                   	ret    
 80483a9:	ba 00 00 00 00       	mov    edx,0x0
 80483ae:	85 d2                	test   edx,edx
 80483b0:	74 f6                	je     80483a8 <register_tm_clones+0x18>
 80483b2:	55                   	push   ebp
 80483b3:	89 e5                	mov    ebp,esp
 80483b5:	83 ec 18             	sub    esp,0x18
 80483b8:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80483bc:	c7 04 24 20 a0 04 08 	mov    DWORD PTR [esp],0x804a020
 80483c3:	ff d2                	call   edx
 80483c5:	c9                   	leave  
 80483c6:	c3                   	ret    
 80483c7:	89 f6                	mov    esi,esi
 80483c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080483d0 <__do_global_dtors_aux>:
 80483d0:	80 3d 20 a0 04 08 00 	cmp    BYTE PTR ds:0x804a020,0x0
 80483d7:	75 13                	jne    80483ec <__do_global_dtors_aux+0x1c>
 80483d9:	55                   	push   ebp
 80483da:	89 e5                	mov    ebp,esp
 80483dc:	83 ec 08             	sub    esp,0x8
 80483df:	e8 7c ff ff ff       	call   8048360 <deregister_tm_clones>
 80483e4:	c6 05 20 a0 04 08 01 	mov    BYTE PTR ds:0x804a020,0x1
 80483eb:	c9                   	leave  
 80483ec:	f3 c3                	repz ret 
 80483ee:	66 90                	xchg   ax,ax

080483f0 <frame_dummy>:
 80483f0:	a1 10 9f 04 08       	mov    eax,ds:0x8049f10
 80483f5:	85 c0                	test   eax,eax
 80483f7:	74 1f                	je     8048418 <frame_dummy+0x28>
 80483f9:	b8 00 00 00 00       	mov    eax,0x0
 80483fe:	85 c0                	test   eax,eax
 8048400:	74 16                	je     8048418 <frame_dummy+0x28>
 8048402:	55                   	push   ebp
 8048403:	89 e5                	mov    ebp,esp
 8048405:	83 ec 18             	sub    esp,0x18
 8048408:	c7 04 24 10 9f 04 08 	mov    DWORD PTR [esp],0x8049f10
 804840f:	ff d0                	call   eax
 8048411:	c9                   	leave  
 8048412:	e9 79 ff ff ff       	jmp    8048390 <register_tm_clones>
 8048417:	90                   	nop
 8048418:	e9 73 ff ff ff       	jmp    8048390 <register_tm_clones>
 804841d:	66 90                	xchg   ax,ax
 804841f:	90                   	nop

08048420 <print_flag>:
 8048420:	83 ec 1c             	sub    esp,0x1c
 8048423:	c7 04 24 40 a0 04 08 	mov    DWORD PTR [esp],0x804a040
 804842a:	c6 05 40 a0 04 08 46 	mov    BYTE PTR ds:0x804a040,0x46
 8048431:	c6 05 41 a0 04 08 4c 	mov    BYTE PTR ds:0x804a041,0x4c
 8048438:	c6 05 42 a0 04 08 41 	mov    BYTE PTR ds:0x804a042,0x41
 804843f:	c6 05 43 a0 04 08 47 	mov    BYTE PTR ds:0x804a043,0x47
 8048446:	c6 05 44 a0 04 08 7b 	mov    BYTE PTR ds:0x804a044,0x7b
 804844d:	c6 05 45 a0 04 08 5f 	mov    BYTE PTR ds:0x804a045,0x5f
 8048454:	c6 05 46 a0 04 08 72 	mov    BYTE PTR ds:0x804a046,0x72
 804845b:	c6 05 47 a0 04 08 65 	mov    BYTE PTR ds:0x804a047,0x65
 8048462:	c6 05 48 a0 04 08 76 	mov    BYTE PTR ds:0x804a048,0x76
 8048469:	c6 05 49 a0 04 08 65 	mov    BYTE PTR ds:0x804a049,0x65
 8048470:	c6 05 4a a0 04 08 72 	mov    BYTE PTR ds:0x804a04a,0x72
 8048477:	c6 05 4b a0 04 08 73 	mov    BYTE PTR ds:0x804a04b,0x73
 804847e:	c6 05 4c a0 04 08 65 	mov    BYTE PTR ds:0x804a04c,0x65
 8048485:	c6 05 4d a0 04 08 5f 	mov    BYTE PTR ds:0x804a04d,0x5f
 804848c:	c6 05 4e a0 04 08 69 	mov    BYTE PTR ds:0x804a04e,0x69
 8048493:	c6 05 4f a0 04 08 73 	mov    BYTE PTR ds:0x804a04f,0x73
 804849a:	c6 05 50 a0 04 08 5f 	mov    BYTE PTR ds:0x804a050,0x5f
 80484a1:	c6 05 51 a0 04 08 66 	mov    BYTE PTR ds:0x804a051,0x66
 80484a8:	c6 05 52 a0 04 08 75 	mov    BYTE PTR ds:0x804a052,0x75
 80484af:	c6 05 53 a0 04 08 6e 	mov    BYTE PTR ds:0x804a053,0x6e
 80484b6:	c6 05 54 a0 04 08 7d 	mov    BYTE PTR ds:0x804a054,0x7d
 80484bd:	c6 05 55 a0 04 08 00 	mov    BYTE PTR ds:0x804a055,0x0
 80484c4:	e8 27 fe ff ff       	call   80482f0 <puts@plt>
 80484c9:	83 c4 1c             	add    esp,0x1c
 80484cc:	c3                   	ret    
 80484cd:	66 90                	xchg   ax,ax
 80484cf:	90                   	nop

080484d0 <__libc_csu_init>:
 80484d0:	55                   	push   ebp
 80484d1:	57                   	push   edi
 80484d2:	31 ff                	xor    edi,edi
 80484d4:	56                   	push   esi
 80484d5:	53                   	push   ebx
 80484d6:	e8 75 fe ff ff       	call   8048350 <__x86.get_pc_thunk.bx>
 80484db:	81 c3 25 1b 00 00    	add    ebx,0x1b25
 80484e1:	83 ec 1c             	sub    esp,0x1c
 80484e4:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 80484e8:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 80484ee:	e8 bd fd ff ff       	call   80482b0 <_init>
 80484f3:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 80484f9:	29 c6                	sub    esi,eax
 80484fb:	c1 fe 02             	sar    esi,0x2
 80484fe:	85 f6                	test   esi,esi
 8048500:	74 27                	je     8048529 <__libc_csu_init+0x59>
 8048502:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048508:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 804850c:	89 2c 24             	mov    DWORD PTR [esp],ebp
 804850f:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048513:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 8048517:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804851b:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 8048522:	83 c7 01             	add    edi,0x1
 8048525:	39 f7                	cmp    edi,esi
 8048527:	75 df                	jne    8048508 <__libc_csu_init+0x38>
 8048529:	83 c4 1c             	add    esp,0x1c
 804852c:	5b                   	pop    ebx
 804852d:	5e                   	pop    esi
 804852e:	5f                   	pop    edi
 804852f:	5d                   	pop    ebp
 8048530:	c3                   	ret    
 8048531:	eb 0d                	jmp    8048540 <__libc_csu_fini>
 8048533:	90                   	nop
 8048534:	90                   	nop
 8048535:	90                   	nop
 8048536:	90                   	nop
 8048537:	90                   	nop
 8048538:	90                   	nop
 8048539:	90                   	nop
 804853a:	90                   	nop
 804853b:	90                   	nop
 804853c:	90                   	nop
 804853d:	90                   	nop
 804853e:	90                   	nop
 804853f:	90                   	nop

08048540 <__libc_csu_fini>:
 8048540:	f3 c3                	repz ret 

Disassembly of section .fini:

08048544 <_fini>:
 8048544:	53                   	push   ebx
 8048545:	83 ec 08             	sub    esp,0x8
 8048548:	e8 03 fe ff ff       	call   8048350 <__x86.get_pc_thunk.bx>
 804854d:	81 c3 b3 1a 00 00    	add    ebx,0x1ab3
 8048553:	83 c4 08             	add    esp,0x8
 8048556:	5b                   	pop    ebx
 8048557:	c3                   	ret    
