
hw1-51fc9a2f121090c40fca30459b5bb6457f7a77b3:     file format elf32-i386


Disassembly of section .init:

08048348 <_init>:
 8048348:	53                   	push   ebx
 8048349:	83 ec 08             	sub    esp,0x8
 804834c:	e8 2f 01 00 00       	call   8048480 <__x86.get_pc_thunk.bx>
 8048351:	81 c3 af 1c 00 00    	add    ebx,0x1caf
 8048357:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 804835d:	85 c0                	test   eax,eax
 804835f:	74 05                	je     8048366 <_init+0x1e>
 8048361:	e8 6a 00 00 00       	call   80483d0 <__isoc99_scanf@plt+0x10>
 8048366:	83 c4 08             	add    esp,0x8
 8048369:	5b                   	pop    ebx
 804836a:	c3                   	ret    

Disassembly of section .plt:

08048370 <fclose@plt-0x10>:
 8048370:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 8048376:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 804837c:	00 00                	add    BYTE PTR [eax],al
	...

08048380 <fclose@plt>:
 8048380:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 8048386:	68 00 00 00 00       	push   0x0
 804838b:	e9 e0 ff ff ff       	jmp    8048370 <_init+0x28>

08048390 <fwrite@plt>:
 8048390:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048396:	68 08 00 00 00       	push   0x8
 804839b:	e9 d0 ff ff ff       	jmp    8048370 <_init+0x28>

080483a0 <__libc_start_main@plt>:
 80483a0:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 80483a6:	68 10 00 00 00       	push   0x10
 80483ab:	e9 c0 ff ff ff       	jmp    8048370 <_init+0x28>

080483b0 <fopen@plt>:
 80483b0:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 80483b6:	68 18 00 00 00       	push   0x18
 80483bb:	e9 b0 ff ff ff       	jmp    8048370 <_init+0x28>

080483c0 <__isoc99_scanf@plt>:
 80483c0:	ff 25 1c a0 04 08    	jmp    DWORD PTR ds:0x804a01c
 80483c6:	68 20 00 00 00       	push   0x20
 80483cb:	e9 a0 ff ff ff       	jmp    8048370 <_init+0x28>

Disassembly of section .plt.got:

080483d0 <.plt.got>:
 80483d0:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 80483d6:	66 90                	xchg   ax,ax

Disassembly of section .text:

080483e0 <main>:
 80483e0:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 80483e4:	83 e4 f0             	and    esp,0xfffffff0
 80483e7:	31 c0                	xor    eax,eax
 80483e9:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 80483ec:	55                   	push   ebp
 80483ed:	89 e5                	mov    ebp,esp
 80483ef:	57                   	push   edi
 80483f0:	53                   	push   ebx
 80483f1:	51                   	push   ecx
 80483f2:	8d 5d ac             	lea    ebx,[ebp-0x54]
 80483f5:	8d 7d ac             	lea    edi,[ebp-0x54]
 80483f8:	b9 0f 00 00 00       	mov    ecx,0xf
 80483fd:	83 ec 54             	sub    esp,0x54
 8048400:	f3 ab                	rep stos DWORD PTR es:[edi],eax
 8048402:	53                   	push   ebx
 8048403:	68 68 86 04 08       	push   0x8048668
 8048408:	e8 b3 ff ff ff       	call   80483c0 <__isoc99_scanf@plt>
 804840d:	89 da                	mov    edx,ebx
 804840f:	8b 0a                	mov    ecx,DWORD PTR [edx]
 8048411:	83 c2 04             	add    edx,0x4
 8048414:	8d 81 ff fe fe fe    	lea    eax,[ecx-0x1010101]
 804841a:	f7 d1                	not    ecx
 804841c:	21 c8                	and    eax,ecx
 804841e:	25 80 80 80 80       	and    eax,0x80808080
 8048423:	74 ea                	je     804840f <main+0x2f>
 8048425:	89 c1                	mov    ecx,eax
 8048427:	c1 e9 10             	shr    ecx,0x10
 804842a:	a9 80 80 00 00       	test   eax,0x8080
 804842f:	0f 44 c1             	cmove  eax,ecx
 8048432:	8d 4a 02             	lea    ecx,[edx+0x2]
 8048435:	0f 44 d1             	cmove  edx,ecx
 8048438:	89 c1                	mov    ecx,eax
 804843a:	00 c1                	add    cl,al
 804843c:	83 da 03             	sbb    edx,0x3
 804843f:	58                   	pop    eax
 8048440:	59                   	pop    ecx
 8048441:	29 da                	sub    edx,ebx
 8048443:	52                   	push   edx
 8048444:	53                   	push   ebx
 8048445:	e8 06 01 00 00       	call   8048550 <encrypt>
 804844a:	83 c4 10             	add    esp,0x10
 804844d:	8d 65 f4             	lea    esp,[ebp-0xc]
 8048450:	31 c0                	xor    eax,eax
 8048452:	59                   	pop    ecx
 8048453:	5b                   	pop    ebx
 8048454:	5f                   	pop    edi
 8048455:	5d                   	pop    ebp
 8048456:	8d 61 fc             	lea    esp,[ecx-0x4]
 8048459:	c3                   	ret    

0804845a <_start>:
 804845a:	31 ed                	xor    ebp,ebp
 804845c:	5e                   	pop    esi
 804845d:	89 e1                	mov    ecx,esp
 804845f:	83 e4 f0             	and    esp,0xfffffff0
 8048462:	50                   	push   eax
 8048463:	54                   	push   esp
 8048464:	52                   	push   edx
 8048465:	68 40 86 04 08       	push   0x8048640
 804846a:	68 e0 85 04 08       	push   0x80485e0
 804846f:	51                   	push   ecx
 8048470:	56                   	push   esi
 8048471:	68 e0 83 04 08       	push   0x80483e0
 8048476:	e8 25 ff ff ff       	call   80483a0 <__libc_start_main@plt>
 804847b:	f4                   	hlt    
 804847c:	66 90                	xchg   ax,ax
 804847e:	66 90                	xchg   ax,ax

08048480 <__x86.get_pc_thunk.bx>:
 8048480:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048483:	c3                   	ret    
 8048484:	66 90                	xchg   ax,ax
 8048486:	66 90                	xchg   ax,ax
 8048488:	66 90                	xchg   ax,ax
 804848a:	66 90                	xchg   ax,ax
 804848c:	66 90                	xchg   ax,ax
 804848e:	66 90                	xchg   ax,ax

08048490 <deregister_tm_clones>:
 8048490:	b8 2b a0 04 08       	mov    eax,0x804a02b
 8048495:	2d 28 a0 04 08       	sub    eax,0x804a028
 804849a:	83 f8 06             	cmp    eax,0x6
 804849d:	76 1a                	jbe    80484b9 <deregister_tm_clones+0x29>
 804849f:	b8 00 00 00 00       	mov    eax,0x0
 80484a4:	85 c0                	test   eax,eax
 80484a6:	74 11                	je     80484b9 <deregister_tm_clones+0x29>
 80484a8:	55                   	push   ebp
 80484a9:	89 e5                	mov    ebp,esp
 80484ab:	83 ec 14             	sub    esp,0x14
 80484ae:	68 28 a0 04 08       	push   0x804a028
 80484b3:	ff d0                	call   eax
 80484b5:	83 c4 10             	add    esp,0x10
 80484b8:	c9                   	leave  
 80484b9:	f3 c3                	repz ret 
 80484bb:	90                   	nop
 80484bc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

080484c0 <register_tm_clones>:
 80484c0:	b8 28 a0 04 08       	mov    eax,0x804a028
 80484c5:	2d 28 a0 04 08       	sub    eax,0x804a028
 80484ca:	c1 f8 02             	sar    eax,0x2
 80484cd:	89 c2                	mov    edx,eax
 80484cf:	c1 ea 1f             	shr    edx,0x1f
 80484d2:	01 d0                	add    eax,edx
 80484d4:	d1 f8                	sar    eax,1
 80484d6:	74 1b                	je     80484f3 <register_tm_clones+0x33>
 80484d8:	ba 00 00 00 00       	mov    edx,0x0
 80484dd:	85 d2                	test   edx,edx
 80484df:	74 12                	je     80484f3 <register_tm_clones+0x33>
 80484e1:	55                   	push   ebp
 80484e2:	89 e5                	mov    ebp,esp
 80484e4:	83 ec 10             	sub    esp,0x10
 80484e7:	50                   	push   eax
 80484e8:	68 28 a0 04 08       	push   0x804a028
 80484ed:	ff d2                	call   edx
 80484ef:	83 c4 10             	add    esp,0x10
 80484f2:	c9                   	leave  
 80484f3:	f3 c3                	repz ret 
 80484f5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80484f9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048500 <__do_global_dtors_aux>:
 8048500:	80 3d 28 a0 04 08 00 	cmp    BYTE PTR ds:0x804a028,0x0
 8048507:	75 13                	jne    804851c <__do_global_dtors_aux+0x1c>
 8048509:	55                   	push   ebp
 804850a:	89 e5                	mov    ebp,esp
 804850c:	83 ec 08             	sub    esp,0x8
 804850f:	e8 7c ff ff ff       	call   8048490 <deregister_tm_clones>
 8048514:	c6 05 28 a0 04 08 01 	mov    BYTE PTR ds:0x804a028,0x1
 804851b:	c9                   	leave  
 804851c:	f3 c3                	repz ret 
 804851e:	66 90                	xchg   ax,ax

08048520 <frame_dummy>:
 8048520:	b8 10 9f 04 08       	mov    eax,0x8049f10
 8048525:	8b 10                	mov    edx,DWORD PTR [eax]
 8048527:	85 d2                	test   edx,edx
 8048529:	75 05                	jne    8048530 <frame_dummy+0x10>
 804852b:	eb 93                	jmp    80484c0 <register_tm_clones>
 804852d:	8d 76 00             	lea    esi,[esi+0x0]
 8048530:	ba 00 00 00 00       	mov    edx,0x0
 8048535:	85 d2                	test   edx,edx
 8048537:	74 f2                	je     804852b <frame_dummy+0xb>
 8048539:	55                   	push   ebp
 804853a:	89 e5                	mov    ebp,esp
 804853c:	83 ec 14             	sub    esp,0x14
 804853f:	50                   	push   eax
 8048540:	ff d2                	call   edx
 8048542:	83 c4 10             	add    esp,0x10
 8048545:	c9                   	leave  
 8048546:	e9 75 ff ff ff       	jmp    80484c0 <register_tm_clones>
 804854b:	66 90                	xchg   ax,ax
 804854d:	66 90                	xchg   ax,ax
 804854f:	90                   	nop

08048550 <encrypt>:
 8048550:	55                   	push   ebp
 8048551:	57                   	push   edi
 8048552:	56                   	push   esi
 8048553:	53                   	push   ebx
 8048554:	31 db                	xor    ebx,ebx
 8048556:	83 ec 24             	sub    esp,0x24
 8048559:	68 60 86 04 08       	push   0x8048660
 804855e:	68 63 86 04 08       	push   0x8048663
 8048563:	e8 48 fe ff ff       	call   80483b0 <fopen@plt>
 8048568:	83 c4 10             	add    esp,0x10
 804856b:	89 c7                	mov    edi,eax
 804856d:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 8048571:	8d 6c 24 0c          	lea    ebp,[esp+0xc]
 8048575:	85 c0                	test   eax,eax
 8048577:	74 4c                	je     80485c5 <encrypt+0x75>
 8048579:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]


ebx = 0

ecx = ebx + 2
eax = 0xcccccccd
esi = ebx + 1
eax = eax * ecx

 8048580:	8d 4b 02             	lea    ecx,[ebx+0x2] #jump back to here
 8048583:	b8 cd cc cc cc       	mov    eax,0xcccccccd
 8048588:	8d 73 01             	lea    esi,[ebx+0x1]
 804858b:	f7 e1                	mul    ecx
 first edx = 1
 edx >>= 3
 eax = (edx+edx*4)*2
 edx = esi
 ecx -= eax

 804858d:	c1 ea 03             	shr    edx,0x3
 8048590:	8d 04 92             	lea    eax,[edx+edx*4]
 8048593:	89 f2                	mov    edx,esi
 8048595:	01 c0                	add    eax,eax
 8048597:	29 c1                	sub    ecx,eax
 8048599:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
 804859d:	d3 e2                	shl    edx,cl
 804859f:	0f be 04 18          	movsx  eax,BYTE PTR [eax+ebx*1] eax = curr chr
 80485a3:	89 f3                	mov    ebx,esi  esi = 1
 80485a5:	0f af c2             	imul   eax,edx edx = 4, 16, 48, 128
 80485a8:	05 33 23 00 00       	add    eax,0x2333
 80485ad:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
 80485b1:	57                   	push   edi
 80485b2:	6a 01                	push   0x1
 80485b4:	6a 04                	push   0x4
 80485b6:	55                   	push   ebp
 80485b7:	e8 d4 fd ff ff       	call   8048390 <fwrite@plt>
 80485bc:	83 c4 10             	add    esp,0x10
 80485bf:	3b 74 24 34          	cmp    esi,DWORD PTR [esp+0x34]
 80485c3:	75 bb                	jne    8048580 <encrypt+0x30>
 80485c5:	83 ec 0c             	sub    esp,0xc
 80485c8:	57                   	push   edi
 80485c9:	e8 b2 fd ff ff       	call   8048380 <fclose@plt>
 80485ce:	83 c4 10             	add    esp,0x10
 80485d1:	83 c4 1c             	add    esp,0x1c
 80485d4:	5b                   	pop    ebx
 80485d5:	5e                   	pop    esi
 80485d6:	5f                   	pop    edi
 80485d7:	5d                   	pop    ebp
 80485d8:	c3                   	ret    
 80485d9:	66 90                	xchg   ax,ax
 80485db:	66 90                	xchg   ax,ax
 80485dd:	66 90                	xchg   ax,ax
 80485df:	90                   	nop

080485e0 <__libc_csu_init>:
 80485e0:	55                   	push   ebp
 80485e1:	57                   	push   edi
 80485e2:	56                   	push   esi
 80485e3:	53                   	push   ebx
 80485e4:	e8 97 fe ff ff       	call   8048480 <__x86.get_pc_thunk.bx>
 80485e9:	81 c3 17 1a 00 00    	add    ebx,0x1a17
 80485ef:	83 ec 0c             	sub    esp,0xc
 80485f2:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 80485f6:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 80485fc:	e8 47 fd ff ff       	call   8048348 <_init>
 8048601:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 8048607:	29 c6                	sub    esi,eax
 8048609:	c1 fe 02             	sar    esi,0x2
 804860c:	85 f6                	test   esi,esi
 804860e:	74 25                	je     8048635 <__libc_csu_init+0x55>
 8048610:	31 ff                	xor    edi,edi
 8048612:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048618:	83 ec 04             	sub    esp,0x4
 804861b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 804861f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8048623:	55                   	push   ebp
 8048624:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 804862b:	83 c7 01             	add    edi,0x1
 804862e:	83 c4 10             	add    esp,0x10
 8048631:	39 f7                	cmp    edi,esi
 8048633:	75 e3                	jne    8048618 <__libc_csu_init+0x38>
 8048635:	83 c4 0c             	add    esp,0xc
 8048638:	5b                   	pop    ebx
 8048639:	5e                   	pop    esi
 804863a:	5f                   	pop    edi
 804863b:	5d                   	pop    ebp
 804863c:	c3                   	ret    
 804863d:	8d 76 00             	lea    esi,[esi+0x0]

08048640 <__libc_csu_fini>:
 8048640:	f3 c3                	repz ret 

Disassembly of section .fini:

08048644 <_fini>:
 8048644:	53                   	push   ebx
 8048645:	83 ec 08             	sub    esp,0x8
 8048648:	e8 33 fe ff ff       	call   8048480 <__x86.get_pc_thunk.bx>
 804864d:	81 c3 b3 19 00 00    	add    ebx,0x19b3
 8048653:	83 c4 08             	add    esp,0x8
 8048656:	5b                   	pop    ebx
 8048657:	c3                   	ret    
